"""
木構造を使えば O(log N)、ハッシュテーブルを使えばほぼ O(1) で検索・追加・削除を実現する。
これだけ見ればハッシュテーブルのほうが優れているように見える。
ところが現実の大規模なデータベースでは、ハッシュテーブルではなく木構造が使われることが多い。
その理由を考えよ。
"""

1. ハッシュテーブルではデータの順序を持たないことが多いが、木構造では順序を持つため。
2. ハッシュテーブルでは最悪O(n)の時間計算量がかかるが、木構造では構造に気をつければO(log N)でできるため。
→赤黒木
3. メモリを確保し過ぎてしまったり、足りなくなってしまったりすることがないため。